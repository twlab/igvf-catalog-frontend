import { NodeType } from "@/lib/types/derived-types";
import nameDictionary from "./name-dictionary";

// maps node types to properties that can be used in filters
// "." is used to denote nested properties
export const propertyDictionary: {
    [key in NodeType]: string[];
} = {
    gene: [
        "start",
        "end",
    ],
    protein: [],
    transcript: [
        "start",
        "end",
    ],
    drug: [],
    variant: [
        "pos:long",
        "annotations.freq.1000genomes.ref:long",
        "annotations.freq.1000genomes.alt:long",
        "annotations.freq.alspac.ref:long",
        "annotations.freq.alspac.alt:long",
        "annotations.freq.chileans.ref:long",
        "annotations.freq.chileans.alt:long",
        "annotations.freq.estonian.ref:long",
        "annotations.freq.estonian.alt:long",
        "annotations.freq.genome_dk.ref:long",
        "annotations.freq.genome_dk.alt:long",
        "annotations.freq.gnomad.ref:long",
        "annotations.freq.gnomad.alt:long",
        "annotations.freq.gonl.ref:long",
        "annotations.freq.gonl.alt:long",
        "annotations.freq.hapmap.ref:long",
        "annotations.freq.hapmap.alt:long",
        "annotations.freq.korean.ref:long",
        "annotations.freq.korean.alt:long",
        "annotations.freq.korea1k.ref:long",
        "annotations.freq.korea1k.alt:long",
        "annotations.freq.northernsweden.ref:long",
        "annotations.freq.northernsweden.alt:long",
        "annotations.freq.page_study.ref:long",
        "annotations.freq.page_study.alt:long",
        "annotations.freq.prjeb37584.ref:long",
        "annotations.freq.prjeb37584.alt:long",
        "annotations.freq.qatari.ref:long",
        "annotations.freq.qatari.alt:long",
        "annotations.freq.sgdp_prj.ref:long",
        "annotations.freq.sgdp_prj.alt:long",
        "annotations.freq.siberian.ref:long",
        "annotations.freq.siberian.alt:long",
        "annotations.freq.tommo.ref:long",
        "annotations.freq.tommo.alt:long",
        "annotations.freq.topmed.ref:long",
        "annotations.freq.topmed.alt:long",
        "annotations.freq.twinsuk.ref:long",
        "annotations.freq.twinsuk.alt:long",
        "annotations.freq.vietnamese.ref:long",
        "annotations.freq.vietnamese.alt:long",
        "annotations.freq.dbgap_popfreq.ref:long",
        "annotations.freq.dbgap_popfreq.alt:long",
        "annotations.apc_conservation",
        "annotations.apc_conservation_v2",
        "annotations.apc_epigenetics_active",
        "annotations.apc_epigenetics",
        "annotations.apc_epigenetics_repressed",
        "annotations.apc_epigenetics_transcription",
        "annotations.apc_local_nucleotide_diversity",
        "annotations.apc_local_nucleotide_diversity_v2",
        "annotations.apc_local_nucleotide_diversity_v3",
        "annotations.apc_mappability",
        "annotations.apc_micro_rna",
        "annotations.apc_mutation_density",
        "annotations.apc_protein_function",
        "annotations.apc_protein_function_v2",
        "annotations.apc_protein_function_v3",
        "annotations.apc_proximity_to_coding",
        "annotations.apc_proximity_to_coding_v2",
        "annotations.apc_proximity_to_tsstes",
        "annotations.apc_transcription_factor",
        "annotations.bravo_an",
        "annotations.bravo_af",
        "annotations.fathmm_xf",
        "annotations.af_total",
        "annotations.af_asj_female",
        "annotations.af_eas_female",
        "annotations.af_afr_male",
        "annotations.af_female",
        "annotations.af_fin_male",
        "annotations.af_oth_female",
        "annotations.af_ami",
        "annotations.af_oth",
        "annotations.af_male",
        "annotations.af_ami_female",
        "annotations.af_afr",
        "annotations.af_eas_male",
        "annotations.af_sas",
        "annotations.af_nfe_female",
        "annotations.af_asj_male",
        "annotations.af_raw",
        "annotations.af_oth_male",
        "annotations.af_nfe_male",
        "annotations.af_asj",
        "annotations.af_amr_male",
        "annotations.af_amr_female",
        "annotations.af_fin",
        "annotations.af_afr_female",
        "annotations.af_sas_male",
        "annotations.af_amr",
        "annotations.af_nfe",
        "annotations.af_eas",
        "annotations.af_ami_male",
        "annotations.af_fin_female",
        "annotations.cadd_rawscore",
        "annotations.cadd_phred",
        "annotations.tg_afr",
        "annotations.tg_all",
        "annotations.tg_amr",
        "annotations.tg_eas",
        "annotations.tg_eur",
        "annotations.tg_sas",
    ],
    study: [],
    disease: [],
};

export const styledPropertyDictionary: {
    [key in NodeType]: string[];
} = {
    gene: propertyDictionary.gene.map(styleProperty),
    protein: propertyDictionary.protein.map(styleProperty),
    transcript: propertyDictionary.transcript.map(styleProperty),
    drug: propertyDictionary.drug.map(styleProperty),
    variant: propertyDictionary.variant.map(styleProperty),
    study: propertyDictionary.study.map(styleProperty),
    disease: propertyDictionary.disease.map(styleProperty),
};

function styleProperty(property: string): string {
    return property
        .split('.')
        .map(s => nameDictionary[s] ?? s)
        .join(' -> ');
}
